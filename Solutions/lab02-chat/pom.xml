<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.5.3</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>
  <groupId>com.example</groupId>
  <name>lab02-chat-solution</name>
  <version>1</version>
  <artifactId>lab02-chat-solution</artifactId>
  <description>SpringAI project for generative text</description>
  <properties>
    <java.version>21</java.version>
    <spring-ai.version>1.0.0</spring-ai.version>
  </properties>


  <dependencies>

		<!-- 
		TODO-01: Follow the lab setup instructions for establishing an AWS account
		and permission to use the Nova chat model.  Once this is finished,
		move on to the next step. 
		-->
		
		<!-- 
		TODO-02: Add the dependency for Amazon Bedrock.  
		The groupId value will be org.springframework.ai
		The artifactId will be spring-ai-starter-model-bedrock-converse
		-->
		<dependency>
			<groupId>org.springframework.ai</groupId>
			<artifactId>spring-ai-starter-model-bedrock-converse</artifactId>
		</dependency>

		<!-- 
		TODO-01: Follow the lab setup instructions for establishing an OpenAI account.
		Once this is complete, move on to the next step. 
		-->
		
		<!-- 
		TODO-02: Add the dependency for openai.  
		The groupId value will be org.springframework.ai
		The artifactId will be spring-ai-starter-model-openai
		-->
		<dependency>
			<groupId>org.springframework.ai</groupId>
			<artifactId>spring-ai-starter-model-openai</artifactId>
		</dependency>

		<!-- 
		TODO-01: Follow the lab instructions for establishing an Azure account,
		permission to use Azure AI Services, OpenID resource, endpoint, keys,
		and deployment.  Once complete, move on to the next step. 
		-->

		<!-- 
		TODO-02: Add the dependency for azure openai.  
		The groupId value will be org.springframework.ai
		The artifactId will be spring-ai-starter-model-azure-openai
		-->
		<dependency>
			<groupId>org.springframework.ai</groupId>
			<artifactId>spring-ai-starter-model-azure-openai</artifactId>
		</dependency>		

		<!-- 
		TODO-01: Follow the lab setup instructions to install Docker and 
		Run Ollama in a Docker container.  Once complete, move on to the next step. 
		-->
				
		<!-- 
		TODO-02: Add the dependency for ollama.  
		The groupId value will be org.springframework.ai
		The artifactId will be spring-ai-starter-model-ollama
		-->
		<dependency>
			<groupId>org.springframework.ai</groupId>
			<artifactId>spring-ai-starter-model-ollama</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		  </dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-bom</artifactId>
				<version>${spring-ai.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>